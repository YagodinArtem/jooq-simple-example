/*
 * This file is generated by jOOQ.
 */
package ru.yagodin.jooq.generated.tables.records;


import java.sql.Timestamp;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import ru.yagodin.jooq.generated.tables.City;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CityRecord extends UpdatableRecordImpl<CityRecord> implements Record4<Long, String, Long, Timestamp> {

    private static final long serialVersionUID = 1849505084;

    /**
     * Setter for <code>example.city.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>example.city.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>example.city.title</code>.
     */
    public void setTitle(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>example.city.title</code>.
     */
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>example.city.country</code>.
     */
    public void setCountry(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>example.city.country</code>.
     */
    public Long getCountry() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>example.city.created</code>.
     */
    public void setCreated(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>example.city.created</code>.
     */
    public Timestamp getCreated() {
        return (Timestamp) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, Long, Timestamp> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, Long, Timestamp> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return City.CITY.ID;
    }

    @Override
    public Field<String> field2() {
        return City.CITY.TITLE;
    }

    @Override
    public Field<Long> field3() {
        return City.CITY.COUNTRY;
    }

    @Override
    public Field<Timestamp> field4() {
        return City.CITY.CREATED;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTitle();
    }

    @Override
    public Long component3() {
        return getCountry();
    }

    @Override
    public Timestamp component4() {
        return getCreated();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTitle();
    }

    @Override
    public Long value3() {
        return getCountry();
    }

    @Override
    public Timestamp value4() {
        return getCreated();
    }

    @Override
    public CityRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public CityRecord value2(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public CityRecord value3(Long value) {
        setCountry(value);
        return this;
    }

    @Override
    public CityRecord value4(Timestamp value) {
        setCreated(value);
        return this;
    }

    @Override
    public CityRecord values(Long value1, String value2, Long value3, Timestamp value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CityRecord
     */
    public CityRecord() {
        super(City.CITY);
    }

    /**
     * Create a detached, initialised CityRecord
     */
    public CityRecord(Long id, String title, Long country, Timestamp created) {
        super(City.CITY);

        set(0, id);
        set(1, title);
        set(2, country);
        set(3, created);
    }
}
